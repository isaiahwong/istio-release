apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway-configuration
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - '*' # Domain name of the external website
---
# All traffic routed to the fleetman-webapp service
# No DestinationRule needed as we aren't doing any subsets, load balancing or outlier detection.
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: gateway-service-rule
  namespace: default
spec:
  hosts: # which incoming host are we applying the proxy rules to???
    - '*'
  gateways:
    - ingress-gateway-configuration
  http:
    - match:
        - uri:
            prefix: /issuer/
        - uri:
            prefix: /issuer
      rewrite:
        uri: '/'
      headers:
        response:
          remove:
            - 'x-envoy-upstream-service-time'
            - 'server'
      route:
        - destination:
            port:
              number: 9000
            host: hydra-service.default.svc.cluster.local

    - match:
        - uri:
            prefix: /admin/
        - uri:
            prefix: /admin
      rewrite:
        uri: '/'
      headers:
        response:
          remove:
            - 'x-envoy-upstream-service-time'
            - 'server'
      route:
        - destination:
            port:
              number: 9001
            host: hydra-service.default.svc.cluster.local

    - match:
        - uri:
            prefix: /auth/
        - uri:
            prefix: /auth
        - uri:
            prefix: /accounts/
        - uri:
            prefix: /accounts
      headers:
        response:
          remove:
            - 'x-envoy-upstream-service-time'
            - 'server'
      route:
        - destination:
            port:
              number: 3000
            host: oauth-login-consent-service.default.svc.cluster.local

    - match:
        - uri:
            prefix: /api/
        - uri:
            prefix: /api
      rewrite:
        uri: '/'
      headers:
        response:
          remove:
            - 'x-envoy-upstream-service-time'
            - 'server'
      route:
        - destination:
            port:
              number: 5000
            host: gateway-service.default.svc.cluster.local

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: server-name-tweaks
  namespace: istio-system
spec:
  configPatches:
    - applyTo: NETWORK_FILTER # http connection manager is a filter in Envoy
      match:
        listener:
          filterChain:
            filter:
              name: 'envoy.http_connection_manager'
      patch:
        operation: MERGE
        value:
          config:
            server_name: '_'
